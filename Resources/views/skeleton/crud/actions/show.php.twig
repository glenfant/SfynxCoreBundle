
    /**
     * Finds and displays a {{ entity }} entity.
     * 
     * @param integer $id Id value
     *
     * @PreAuthorize("hasRole('ROLE_EDITOR') or (hasRole('ROLE_ADMIN') and hasRole('ROLE_SUPER_ADMIN'))")
     * @return Response
     * @access public
     */
    public function showAction($id)
    {
        $em       = $this->getDoctrine()->getManager();
        $locale   = $this->container->get('request_stack')->getCurrentRequest()->getLocale();
        // we set params        
        $NoLayout = $this->container->get('request_stack')->getCurrentRequest()->query->get('NoLayout');
        // we get entity object
        $entity   = $em->getRepository("{{ bundle }}:{{ entity }}")->findOneByEntity($locale, $id, 'object');
        if (!$entity) {
            throw ControllerException::NotFoundEntity('{{ entity }}');
        }
{% if 'delete' in actions %}

        $deleteForm = $this->createDeleteForm($id);
{% endif %}

{% if 'annotation' == format %}
        return array(
            'entity'      => $entity,
            'NoLayout'    => $NoLayout,
{% if 'delete' in actions %}
            'delete_form' => $deleteForm->createView(),
{%- endif %}
        );
{% else %}
        return $this->render("{{ bundle }}:{{ entity|replace({'\\': '/'}) }}:show.html.twig", array(
            'entity'      => $entity,
            'NoLayout'    => $NoLayout,
{% if 'delete' in actions %}
            'delete_form' => $deleteForm->createView(),
{% endif %}
        ));
{% endif %}
    }
