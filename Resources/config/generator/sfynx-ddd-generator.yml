# php vendor/bin/sfynx-ddd-generator \
# --namespace=MyContext \
# --conf-file=/var/www/app/config/generator/sfynx-ddd-generator.yml \
# --report-template=default \
# --report-dir=/var/www/src/generator
default:
    namespace: MyContext
    cqrs: Movie\Command
    template: default
    indentation: 4
    widgets:
        presentation:
            widget_coordination:
                class: FormCoordination
                arguments:
                    - '$workflowHandler'
                extends: Sfynx\CoreBundle\Layers\Presentation\Coordination\Generalisation\AbstractFormController
                options:
                    implements: ~
                    uses: ~
                    traits: ~
                body:
                    - command:
                        design: 'adapter'
                        class: Sfynx\CoreBundle\Layers\Presentation\Adapter\Command\CommandAdapter
                        arguments:
                            - 'new MovieFormCommand'
                        calls:
                            - [ createCommandFromRequest, [ 'new MovieFormRequest' ] ]
                    - commandWorkflow:
                        design: 'observer'
                        class: Sfynx\CoreBundle\Layers\Application\Command\Workflow\CommandWorkflow
                        calls:
                            - [ attach, [ 'new OBMovieEntityEdit' ] ]
                            - [ attach, [ 'new OBMovieEntityCreate' ] ]
                    - commandHandlerResult:
                        design: 'decorator'
                        class: Sfynx\CoreBundle\Layers\Application\Command\Handler\FormCommandHandler
                        arguments:
                            - '$commandWorkflow'
                        handlers: [ 'MovieFormCommandValidationHandler', 'MovieFormCommandSpecHandler']
                        calls:
                            - [ process, [ '$command' ] ]
                    - codeln1:
                        design: 'code'
                        content: "$this->param->templating = '@Business/Movie/edit.html.twig'"
                    - workflowHandler:
                        design: 'observer'
                        class: Sfynx\CoreBundle\Layers\Application\Common\Handler\WorkflowHandler
                        calls:
                            - [ attach, [ 'new OBMovieCreateFormData' ] ]
                            - [ attach, [ 'new OBCreateEntityFormView' ] ]
                            - [ attach, [ 'new OBInjectFormErrors' ] ]
                            - [ attach, [ 'new OBMovieCreateFormBody' ] ]
                            - [ attach, [ 'new OBCreateResponseHtml' ] ]
                    - responseHandlerResult:
                        design: 'handler'
                        class: Sfynx\CoreBundle\Layers\Application\Response\Handler\ResponseHandler
                        arguments:
                            - '$workflowHandler'
                        calls:
                            - [ process, [ '$commandHandlerResult' ] ]
                    - codeln2:
                        design: 'code'
                        content: "return $responseHandlerResult->getResponse();"
            widget_request:
                class: MovieFormRequest
                arguments:
                  - 'Sfynx\CoreBundle\Layers\Domain\Service\Request\Generalisation\RequestInterface'
        application:
            widget_cqrs_command:
                class: MovieFormCommand
                arguments: ~
            widget_cqrs_validator_specification:
                class: Validation\SpecHandler\MovieFormCommandSpecHandler
                arguments: ~
            widget_cqrs_validator_validation:
                class: Validation\ValidationHandler\MovieFormCommandValidationHandler
                arguments: ~
            widget_validation_type:
                class: MovieType
                arguments: ~
        domain:
            widget_entity: true
            widget_service_class:
                - EntityManager:
                    create: true
                    class: Domain\Service\Movie\Manager\EntityManager
                    arguments: ~
                    comments: ['Layout manager working with entities (Orm, Odm, Couchdb)']
                    extends: Sfynx\CoreBundle\Layers\Domain\Service\Manager\Generalisation\AbstractManager
                    options:
                        implements: ~
                        uses: ~
                        traits: ~
                        methods:
                          - name: 'newFromCommand'
                            comments: ['{@inheritdoc}']
                            arguments: ['Sfynx\CoreBundle\Layers\Application\Command\Generalisation\Interfaces\CommandInterface']
                            visibility: 'public'
                            returnType: 'object'
                            returnParent: true
                          - name: 'buildFromCommand'
                            comments: ['{@inheritdoc}']
                            arguments: ['object $entity', 'Sfynx\CoreBundle\Layers\Application\Command\Generalisation\Interfaces\CommandInterface', 'bool $updateCommand = false']
                            visibility: 'public'
                            returnType: 'object'
                            returnParent: true
                          - name: 'buildFromEntity'
                            comments: ['{@inheritdoc}']
                            arguments: ['Sfynx\CoreBundle\Layers\Application\Command\Generalisation\Interfaces\CommandInterface', 'object $entity']
                            visibility: 'public'
                            returnType: 'Sfynx\CoreBundle\Layers\Application\Command\Generalisation\Interfaces\CommandInterface'
                            returnParent: true
                - MovieCommandRepositoryInterface:
                    create: true
                    class: Domain\Repository\Command\MovieCommandRepositoryInterface
                    type: interface
                - MovieQueryRepositoryInterface:
                    create: true
                    class: Domain\Repository\Query\MovieQueryRepositoryInterface
                    type: interface            
            widget_workflow_observer_class:
                - OBMovieEntityCreate:
                    create: true
                    class: OBMovieEntityCreate
                    arguments:
                      - 'Sfynx\CoreBundle\Layers\Domain\Service\Manager\Generalisation\Interfaces\ManagerInterface'
                      - 'Sfynx\CoreBundle\Layers\Domain\Service\Request\Generalisation\RequestInterface'
                    extends: Sfynx\CoreBundle\Layers\Domain\Workflow\Observer\Generalisation\Command\AbstractEntityCreateHandler
                    options:
                        implements: ~
                        uses: ~
                        traits: [Sfynx\CoreBundle\Layers\Domain\Workflow\Observer\Command\TraitProcess]
                - OBMovieEntityEdit:
                    create: true
                    class: OBMovieEntityEdit
                    arguments:
                      - 'Sfynx\CoreBundle\Layers\Domain\Service\Manager\Generalisation\Interfaces\ManagerInterface'
                      - 'Sfynx\CoreBundle\Layers\Domain\Service\Request\Generalisation\RequestInterface'
                    extends: Sfynx\CoreBundle\Layers\Domain\Workflow\Observer\Generalisation\Command\AbstractEntityEditHandler
                    options:
                        implements: ~
                        uses: ~
                        traits: [Sfynx\CoreBundle\Layers\Domain\Workflow\Observer\Command\TraitProcess]
                - OBMovieCreateFormData:
                    create: true
                    class: Domain\Workflow\Observer\Movie\Response\OBMovieCreateFormData
                    arguments:
                      - 'Sfynx\CoreBundle\Layers\Domain\Service\Request\Generalisation\RequestInterface'
                    extends: Sfynx\CoreBundle\Layers\Domain\Workflow\Observer\Generalisation\Response\AbstractCreateFormData
                    options:
                        implements: ~
                        uses: ~
                        traits: ~
                        methods:
                          - name: 'process'
                            comments: ['{@inheritdoc}']
                            visibility: 'protected'
                            returnType: 'bool'
                - OBMovieCreateFormBody:
                    create: true
                    class: Domain\Workflow\Observer\Movie\Response\OBMovieCreateFormBody
                    arguments:
                      - 'Sfynx\CoreBundle\Layers\Domain\Service\Request\Generalisation\RequestInterface'
                      - 'Symfony\Bundle\FrameworkBundle\Templating\EngineInterface'
                      - '$this->param'
                    extends: Sfynx\CoreBundle\Layers\Domain\Workflow\Observer\Generalisation\Response\AbstractCreateFormBody
                    options:
                        implements: ~
                        uses: ~
                        traits: ~
                        methods:
                          - name: 'process'
                            comments: ['{@inheritdoc}']
                            visibility: 'protected'
                            returnType: 'bool'
                - OBCreateEntityFormView:
                    create: false
                    class: Sfynx\CoreBundle\Layers\Domain\Workflow\Observer\Response\OBCreateEntityFormView
                    arguments:
                      - 'Sfynx\CoreBundle\Layers\Domain\Service\Request\Generalisation\RequestInterface'
                      - 'Symfony\Component\Form\FormFactoryInterface'
#                      - 'Sfynx\CoreBundle\Layers\Domain\Service\Form\Generalisation\Interfaces\FormTypeInterface'
                      - 'new MovieType'
                - OBInjectFormErrors:
                    create: false
                    class: Sfynx\CoreBundle\Layers\Domain\Workflow\Observer\Response\OBInjectFormErrors
                    arguments:
                      - 'Sfynx\CoreBundle\Layers\Domain\Service\Request\Generalisation\RequestInterface'
                      - 'Symfony\Component\Translation\TranslatorInterface'
                - OBCreateResponseHtml:
                    create: false
                    class: Sfynx\CoreBundle\Layers\Domain\Workflow\Observer\Response\OBCreateResponseHtml
                    arguments:
                      - 'Sfynx\CoreBundle\Layers\Domain\Service\Request\Generalisation\RequestInterface'
        infrastructure:
            widget_security_parse: true
            widget_infra_class:
                - CommandMovieRepository:
                    create: true
                    class: Infrastructure\Persistence\Adapter\Command\Orm\MovieRepository
                    arguments: ~
                    comments:
                      - 'This class was generated by the Doctrine ORM. Add your own custom'
                      - 'repository methods below.'
                    extends: Sfynx\CoreBundle\Layers\Infrastructure\Persistence\Adapter\Generalisation\Orm\AbstractCommandRepository
                    options:
                        implements: ['Domain\Repository\Command\MovieCommandRepositoryInterface']
                        uses: ~
                        traits: ~
                - QueryMovieRepository:
                    create: true
                    class: Infrastructure\Persistence\Adapter\Query\Orm\MovieRepository
                    arguments: ~
                    comments:
                      - 'This class was generated by the Doctrine ORM. Add your own custom'
                      - 'repository methods below.'
                    extends: Sfynx\CoreBundle\Layers\Infrastructure\Persistence\Adapter\Generalisation\Orm\AbstractQueryRepository
                    options:
                        implements: ['Domain\Repository\Query\MovieQueryRepositoryInterface']
                        uses: ~
                        traits: ~            
    mapping:
        x-providers: [orm, couchdb]
        x-entities:
#          Movie:
#            x-fields:
#              id:
#                name: entityId
#                type: id
#                primaryKey: true
#              title:
#                type: string
#                required: true
#              releaseDate:
#                type: datetime
#                required: false
#              synopsis:
#                type: string
#                required: false
#              reference:
#                type: string
#                required: true
#              genre:
#                type: integer
#                targetEntity: Genre
#                foreignKey: true
#                required: true
#          Price:
#            x-fields:
#              id:
#                name: entityId
#                type: id
#                primaryKey: true
#              title:
#                type: string
#                required: true
#              date:
#                type: datetime
#                required: false
#              reference:
#                type: string
#                required: true
#              movie:
#                type: integer
#                targetEntity: Movie
#                foreignKey: true
#                required: true
#          Genre:
#            x-fields:
#              id:
#                name: entityId
#                type: id
#                primaryKey: true
#              label:
#                type: string
#                required: false
#
#
#
          Movie:
            x-fields:
              id:
                type: valueObject
                voName: IdVO
                primaryKey: true
              movie:
                type: valueObject
                voName: MovieVO
              genre:
                type: valueObject
                voName: IdVO
                targetEntity: Genre
                foreignKey: true
                required: true
          Price:
            x-fields:
              id:
                type: valueObject
                voName: IdVO
                primaryKey: true
              price:
                type: valueObject
                voName: PriceVO
              movie:
                type: valueObject
                voName: IdVO
                targetEntity: Movie
                foreignKey: true
                required: true
          Genre:
            x-fields:
              id:
                type: valueObject
                voName: IdVO
                primaryKey: true
              label:
                type: string
                required: true
        x-valueObjects:
          IdVO:
            type: Sfynx\CoreBundle\Layers\Domain\ValueObject\IdVO
            x-fields:
              id:
                name: entityId
                type: id
          MovieVO:
            type: \Domain\ValueObject\MovieVO
            x-fields:
              title:
                type: valueObject
                voName: TitleVO
                required: true
              releaseDate:
                type: datetime
                required: false
              synopsis:
                type: string
                required: false
              reference:
                type: string
                required: true
          PriceVO:
            type: \Domain\ValueObject\PriceVO
            x-fields:
              title:
                type: valueObject
                voName: TitleVO
                required: true
              date:
                type: datetime
                required: false
              reference:
                type: string
                required: true
          TitleVO:
            type: \Domain\ValueObject\TitleVO
            x-fields:
              title:
                type: string
