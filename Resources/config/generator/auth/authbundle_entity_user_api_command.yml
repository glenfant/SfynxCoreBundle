default:
    namespace: Sfynx\AuthBundle
    cqrs: User\Command
    template: default
    indentation: 4
    widgets:
        presentation:
            widget_coordination:
                class: OneCoordination
                arguments:
                    - '$workflowHandler'
                extends: Sfynx\CoreBundle\Layers\Presentation\Coordination\Generalisation\AbstractFormController
                options:
                    implements: ~
                    uses:
                      - 'Symfony\Component\HttpFoundation\JsonResponse'
                      - 'Exception'
                      - 'Sfynx\CoreBundle\Layers\Infrastructure\Exception\Entity\ViolationEntityException'
                      - 'Sfynx\CoreBundle\Layers\Infrastructure\Exception\Entity\NotFoundEntityException'
                    traits: ~
                body:
                    - codeComment1:
                        design: 'code'
                        content:
                          - 'try {'
                          - "// 1. Transform options to Command."
                    - updateCommand:
                        design: 'adapter'
                        class: Sfynx\CoreBundle\Layers\Presentation\Adapter\Command\CommandAdapter
                        arguments:
                            - 'new UpdateCommand'
                        calls:
                            - [ createCommandFromRequest, [ 'new UpdateRequest' ] ]
                    - codeComment2:
                        design: 'code'
                        content: "// 2. Implement the command workflow"
                    - commandWorkflow:
                        design: 'observer'
                        class: Sfynx\CoreBundle\Layers\Application\Command\Workflow\CommandWorkflow
                        calls:
                            - [ attach, [ 'new OBUserEntityEdit' ] ]
                            - [ attach, [ 'new OBUserEntityCreate' ] ]
                    - codeComment3:
                        design: 'code'
                        content: "// 3. Implement decorator to apply the command workflow from the command"
                    - commandHandlerResult:
                        design: 'decorator'
                        class: Sfynx\CoreBundle\Layers\Application\Command\Handler\CommandHandler
                        arguments:
                            - '$commandWorkflow'
                        handlers: [ 'UpdateCommandValidationHandler', 'UpdateCommandSpecHandler']
                        calls:
                            - [ process, [ '$updateCommand' ] ]
                    - codeln1:
                        design: 'code'
                        content:
                          - "// 4. Implement the Response workflow"
                    - workflowHandler:
                        design: 'observer'
                        class: Sfynx\CoreBundle\Layers\Application\Common\Handler\WorkflowHandler
                        calls:
                            - [ attach, [ 'new OBUserApiJson' ] ]
                            - [ attach, [ 'new OBCreateResponseJson' ] ]
                            - [ attach, [ 'new OBCreatedStatusResponseJson' ] ]
                    - responseHandlerResult:
                        design: 'handler'
                        class: Sfynx\CoreBundle\Layers\Application\Response\Handler\ResponseHandler
                        arguments:
                            - '$workflowHandler'
                        calls:
                            - [ process, [ '$commandHandlerResult' ] ]
                    - codeln2:
                        design: 'code'
                        content:
                          - "$response = $responseHandlerResult->getResponse();"
                          - '}  catch (NotFoundEntityException $e) {'
                          - '    $response = new JsonResponse();'
                          - '    $response->setStatusCode(JsonResponse::HTTP_NOT_FOUND);'
                          - '    $response->setContent($e->getMessage());'
                          - '}  catch (ViolationEntityException $e) {'
                          - '    $response = new JsonResponse();'
                          - '    $response->setStatusCode(JsonResponse::HTTP_CONFLICT);'
                          - '    $response->setContent($e->getMessage());'
                          - '}  catch (Exception $e) {'
                          - '    $response = new JsonResponse();'
                          - '    $response->setStatusCode(JsonResponse::HTTP_SERVICE_UNAVAILABLE);'
                          - '    $response->setContent($e->getMessage());'
                          - '}'
                          - ''
                          - 'return $response;'
            widget_request:
                class: UpdateRequest
                arguments:
                  - 'Sfynx\CoreBundle\Layers\Domain\Service\Request\Generalisation\RequestInterface'
                extends: Sfynx\CoreBundle\Layers\Presentation\Request\Generalisation\AbstractRequest
                options:
                    methods: ['POST', 'PUT', 'PATCH']
        application:
            widget_cqrs_command:
                class: UpdateCommand
                arguments: ~
            widget_cqrs_command_validator_specification:
                class: Validation\SpecHandler\UpdateCommandSpecHandler
                arguments:
                  - '$commandHandlerResult'
            widget_cqrs_command_validator_validation:
                class: Validation\ValidationHandler\UpdateCommandValidationHandler
                arguments:
                  - '$commandHandlerResult'
                  - 'new SymfonyValidatorStrategy'
                  - 'false'
            widget_service_app_class:
                - SymfonyValidatorStrategy:
                    create: false
                    class: 'Sfynx\CoreBundle\Layers\Application\Validation\Validator\SymfonyValidatorStrategy'
                    arguments: ['Symfony\Component\Validator\Validator\ValidatorInterface']
        domain:
            #
            # USER ENTITY CLASSES
            #
            widget_entity_class:
                - UserEntity:
                    create: true
                    class: Domain\Entity\User
                    options:
                        mapping: 'User'
                        implements:
                          - Symfony\Component\Security\Core\User\UserInterface
                        uses:
                          - Doctrine\DBAL\Types\JsonType
                          - Doctrine\ORM\Mapping as ORM
                          - Ramsey\Uuid\UuidInterface
                        traits:
                          - 'Sfynx\CoreBundle\Layers\Domain\Model\Traits\TraitBuild'
                          - 'Sfynx\CoreBundle\Layers\Domain\Model\Traits\TraitEnabled'
                        models:
                          0:
                            class: 'Sfynx\CoreBundle\Generator\Domain\Component\File\HandlerModel\Observer\Entity'
                            parameters:
                              performMethods:
                                - 'Sfynx\CoreBundle\Generator\Domain\Component\File\MethodModel\Construct'
                                - 'Sfynx\CoreBundle\Generator\Domain\Component\File\MethodModel\CreateFromNative'
                                - 'Sfynx\CoreBundle\Generator\Domain\Component\File\MethodModel\ToString'
                                - 'Sfynx\CoreBundle\Generator\Domain\Component\File\MethodModel\ToArray'
                                - 'Sfynx\CoreBundle\Generator\Domain\Component\File\MethodModel\Serialize'
                                - 'Sfynx\CoreBundle\Generator\Domain\Component\File\MethodModel\Unserialize'

            #
            # MANAGER CLASSES
            #
            widget_service_manager_class:
                - UserEntityManager:
                    create: true
                    class: Entity\User\Manager\UserManager
                    arguments: ~
                    options:
                        mapping: 'User'
            #
            # SERVICES CLASSES
            #
            widget_service_class:
                #
                # REPOSITORY INTERFACES
                #
                - UserCommandRepositoryInterface:
                    create: true
                    class: Domain\Repository\Command\UserCommandRepositoryInterface
                    type: interface
                - UserQueryRepositoryInterface:
                    create: true
                    class: Domain\Repository\Query\UserQueryRepositoryInterface
                    type: interface
            #
            # OBSERVER CLASSES
            #
            widget_workflow_observer_class:
                - OBUserEntityCreate:
                    create: true
                    class: OBUserEntityCreate
                    arguments:
                      - 'Sfynx\CoreBundle\Layers\Domain\Service\Manager\Generalisation\Interfaces\ManagerInterface'
                      - 'Sfynx\CoreBundle\Layers\Domain\Service\Request\Generalisation\RequestInterface'
                      - 'Symfony\Bundle\FrameworkBundle\Routing\Router'
                      - 'bool $isUpdateCommand = false'
                    construct:
                        create: true
                        body:
                          - 'parent::__construct($manager, $request, $updateCommand, $isUpdateCommand);'
                    extends: Sfynx\CoreBundle\Layers\Domain\Workflow\Observer\Generalisation\Command\AbstractEntityCreateHandler
                    options:
                        implements: ~
                        uses: ~
                        traits: [Sfynx\CoreBundle\Layers\Domain\Workflow\Observer\Command\TraitProcess]
                - OBUserEntityEdit:
                    create: true
                    class: OBUserEntityEdit
                    arguments:
                      - 'Sfynx\CoreBundle\Layers\Domain\Service\Manager\Generalisation\Interfaces\ManagerInterface'
                      - 'Sfynx\CoreBundle\Layers\Domain\Service\Request\Generalisation\RequestInterface'
                      - 'Symfony\Bundle\FrameworkBundle\Routing\Router'
                      #- 'bool $updateCommand = false'
                    construct:
                        create: true
                        body:
                          - 'parent::__construct($manager, $request, $updateCommand);'
                    extends: Sfynx\CoreBundle\Layers\Domain\Workflow\Observer\Generalisation\Command\AbstractEntityEditHandler
                    options:
                        implements: ~
                        uses: ~
                        traits: [Sfynx\CoreBundle\Layers\Domain\Workflow\Observer\Command\TraitProcess]
                - OBUserApiJson:
                    create: true
                    class: Domain\Workflow\Observer\User\Response\Api\OBUserApiJson
                    arguments:
                      - 'Sfynx\CoreBundle\Layers\Domain\Service\Request\Generalisation\RequestInterface'
                    extends: Sfynx\CoreBundle\Layers\Domain\Workflow\Observer\Generalisation\Response\Api\AbstractApiJson
                    options:
                        implements: ~
                        uses:
                          - 'Sfynx\CoreBundle\Layers\Infrastructure\Exception\EntityException'
                          - 'Exception'
                          - 'Spatie\Fractalistic\Fractal'
                          - 'Spatie\Fractalistic\ArraySerializer'
                        traits: ~
                        methods:
                          - name: 'process'
                            comments: ['{@inheritdoc}']
                            visibility: 'protected'
                            returnType: 'bool'
                            body:
                              - 'try {'
                              - "    $item = ["
                              - "       'status' => 'success',"
                              - "       'results' => [],"
                              - "    ];"
                              - "    "
                              - "    if (!empty($this->wfHandler->errors)) {"
                              - "       $item = ["
                              - "           'status' => 'errors',"
                              - "           'results' => $this->wfHandler->errors,"
                              - "       ];"
                              - "    }"
                              - "    "
                              - "    $this->wfLastData->rows = Fractal::create()"
                              - "               ->item($item)"
                              - "               ->transformWith(function($body) {"
                              - "                   -return $body;"
                              - "               })"
                              - "               ->serializeWith(new ArraySerializer())"
                              - "               ->toArray();"
                              - "               "
                              - '} catch (Exception $e) {'
                              - '    throw EntityException::NotFoundEntity(get_class($this->wfHandler->entity));'
                              - '}'
                              - ''
                              - 'return true;'
                - OBCreateResponseJson:
                    create: false
                    class: Sfynx\CoreBundle\Layers\Domain\Workflow\Observer\Response\Api\OBCreateResponseJson
                    arguments:
                      - 'Sfynx\CoreBundle\Layers\Domain\Service\Request\Generalisation\RequestInterface'
                - OBCreatedStatusResponseJson:
                    create: false
                    class: Sfynx\CoreBundle\Layers\Domain\Workflow\Observer\Response\Api\OBCreatedStatusResponseJson
                    arguments:
                      - 'Sfynx\CoreBundle\Layers\Domain\Service\Request\Generalisation\RequestInterface'
        infrastructure:
            widget_security_parse: true
            widget_infra_class:
                #
                # USER REPOSITORIES
                #
                - CommandUserRepository:
                    create: true
                    class: Infrastructure\Persistence\Adapter\Command\Orm\UserRepository
                    comments:
                      - 'This class was generated by the Doctrine ORM. Add your own custom'
                      - 'repository methods below.'
                    extends: Sfynx\CoreBundle\Layers\Infrastructure\Persistence\Adapter\Generalisation\Orm\AbstractCommandRepository
                    options:
                        implements: ['Domain\Repository\Command\UserCommandRepositoryInterface']
                - QueryUserRepository:
                    create: true
                    class: Infrastructure\Persistence\Adapter\Query\Orm\UserRepository
                    comments:
                      - 'This class was generated by the Doctrine ORM. Add your own custom'
                      - 'repository methods below.'
                    extends: Sfynx\CoreBundle\Layers\Infrastructure\Persistence\Adapter\Generalisation\Orm\AbstractQueryRepository
                    options:
                        implements: ['Domain\Repository\Query\UserQueryRepositoryInterface']
                #
                # USER TRANSFORMER/QUERY BUILDER
                #
                - FindUserQueryBuilder:
                    create: true
                    class: Infrastructure\Persistence\Adapter\Query\Orm\User\QueryBuilder\FindUserQueryBuilder
                    arguments: ~
                    extends: Sfynx\CoreBundle\Layers\Infrastructure\Persistence\QueryBuilder\Generalisation\Orm\AbstractQueryBuilder
                    options:
                        uses: ['Doctrine\ORM\QueryBuilder']
                        models:
                          - { class: 'Sfynx\CoreBundle\Generator\Domain\Component\File\HandlerModel\Observer\QueryBuilder', parameters: ['bool $var1 = false', 'bool $var2 = true', 'int $var3 = 0', 'array $var4 = []'] }
                - FindUserQueryTransformer:
                    create: true
                    class: Infrastructure\Persistence\Adapter\Query\Orm\User\QueryTransformer\FindUserQueryTransformer
                    arguments: ~
                    extends: Sfynx\CoreBundle\Layers\Infrastructure\Persistence\QueryBuilder\Generalisation\Orm\AbstractQueryBuilder
                    options:
                        uses: ['Sfynx\AuthBundle\Infrastructure\Persistence\Adapter\Query\Orm\User\QueryBuilder\FindUserQueryBuilder']
                        models:
                          - { class: 'Sfynx\CoreBundle\Generator\Domain\Component\File\HandlerModel\Observer\QueryTransformer', parameters: ['FindMovieQueryBuilder', ['bool $var1 = false', 'bool $var2 = true', 'int $var3 = 0', 'array $var4 = []']]}
    mapping:
        x-providers: [orm, couchdb]
        x-entities:
          User:
            x-fields:
              id:
                name: entityId
                type: uuid
                primaryKey: true
                mapping:
                  targetEntity: 'Sfynx\AuthBundle\Domain\Entity\User'
              username:
                name: username
                type: string
                required: true
              password:
                name: password
                type: string
                required: true
              email:
                name: email
                type: string
                required: true
              roles:
                name: roles
                type: array
                mapping:
                  type: Doctrine\DBAL\Types\JsonType
                form:
                  type: array
                  serviceType: sfynx_security_roles
                required: true
              enabled:
                name: enabled
                type: boolean
                defaultValue: true
                required: false
              isActive:
                name: is_active
                type: boolean
                required: true
